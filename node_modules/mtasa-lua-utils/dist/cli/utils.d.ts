import Enquirer from 'enquirer';
export declare type EnquirerArrayPromptOptions = Extract<Parameters<typeof Enquirer.prompt>[0], {
    choices: unknown;
}>;
export declare type EnquirerPromptOptions = Extract<Parameters<typeof Enquirer.prompt>[0], {
    type: string | (() => string);
}>;
export declare type EnquirerPromptOptionsExtended = EnquirerPromptOptions & {
    prefix: string;
};
export interface EnquirerMultiSelectPromptOptions extends EnquirerArrayPromptOptions {
    type: 'multiselect';
    choices: string[] | EnquirerChoiceExtended[];
    initial: EnquirerArrayPromptOptions['initial'] & number[];
    result: EnquirerArrayPromptOptions['result'] & ((this: {
        map: (v: readonly string[]) => Record<string, string>;
    }, result: string[]) => string[]);
}
declare type EnquirerChoices = Exclude<EnquirerArrayPromptOptions['choices'], string[]>;
export declare type EnquirerChoice = EnquirerChoices[0];
export interface EnquirerChoiceExtended extends EnquirerChoice {
    enabled?: boolean;
    indicator?: string | ((self: unknown, choice: EnquirerChoiceExtended, index: number) => string);
}
export declare function deleteFolderSyncRecursive(path: string): void;
export {};
