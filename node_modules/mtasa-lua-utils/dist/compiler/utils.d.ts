import { MTASAMeta, Script } from './meta/types';
import { CompilerOptions } from './cli';
import { Diagnostic, DiagnosticCategory } from 'typescript';
export interface MetaScriptsBySide {
    client: Script[];
    server: Script[];
}
export declare function getScriptsFromMeta(metaData: Readonly<MTASAMeta>): MetaScriptsBySide;
export interface ResourceData {
    verboseName: string;
    rootDir: string;
    outDir: string;
}
export declare function getResourceVerboseName(resourceMeta: Readonly<MTASAMeta>): string;
export declare function getResourceData(options: Readonly<CompilerOptions>, resourceMeta: Readonly<MTASAMeta>): ResourceData;
export declare function simpleTsDiagnostic(message: string, category: DiagnosticCategory): Diagnostic;
export declare function showDiagnosticAndExit(diagnosticResults: readonly Diagnostic[], reportDiagnostic: (d: Diagnostic) => void): void;
export declare function extendOptions(options: Readonly<CompilerOptions>, meta: Readonly<MTASAMeta>, data: Readonly<ResourceData>): CompilerOptions;
export declare function getEmptyTsFilePath(): string;
